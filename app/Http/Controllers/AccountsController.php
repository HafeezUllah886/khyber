<?php
 namespace App\Http\Controllers; use App\Models\accounts; use App\Models\transactions; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; use Symfony\Component\Finder\Exception\AccessDeniedException; class AccountsController extends Controller { public function index($filter) { $accounts = accounts::where("\164\171\160\145", $filter)->orderBy("\164\x69\x74\x6c\x65", "\x61\x73\143")->get(); return view("\106\151\156\x61\156\143\x65\x2e\141\x63\x63\x6f\x75\156\x74\x73\x2e\x69\156\x64\x65\x78", compact("\x61\x63\143\x6f\x75\156\164\x73", "\146\x69\x6c\164\x65\162")); } public function create() { return view("\106\151\x6e\x61\156\143\x65\x2e\141\143\143\x6f\165\x6e\164\163\x2e\x63\x72\x65\141\x74\145"); } public function store(Request $request) { $request->validate(array("\164\x69\164\x6c\145" => "\162\145\x71\165\151\162\x65\x64\174\165\x6e\151\x71\165\145\72\x61\x63\x63\x6f\x75\156\x74\x73\x2c\164\151\164\x6c\145"), array("\x74\x69\x74\x6c\x65\x2e\162\145\x71\165\151\x72\x65\144" => "\x50\154\x65\x61\163\x65\40\x45\x6e\x74\145\162\x20\101\x63\143\x6f\165\156\164\x20\x54\151\164\x6c\145", "\164\151\164\x6c\x65\56\165\156\151\x71\165\x65" => "\101\x63\143\157\165\156\164\x20\167\151\164\x68\40\164\x68\151\163\x20\x74\151\x74\154\145\40\141\x6c\x72\145\141\x64\x79\40\145\170\151\x73\x74\x73")); try { DB::beginTransaction(); $ref = getRef(); if ($request->type == "\103\165\163\164\x6f\155\x65\162") { $account = accounts::create(array("\x74\151\164\154\x65" => $request->title, "\164\x79\160\145" => $request->type, "\143\x61\164\x65\x67\x6f\x72\x79" => $request->category, "\143\156\x69\x63" => $request->cnic, "\143\x6f\x6e\x74\x61\143\164" => $request->contact, "\x61\144\x64\162\145\163\x73" => $request->address, "\156\x74\x6e" => $request->ntn, "\163\164\162\156" => $request->strn, "\x63\x5f\x74\x79\160\145" => $request->c_type)); } else { $account = accounts::create(array("\x74\x69\x74\154\145" => $request->title, "\x74\x79\160\145" => $request->type, "\143\141\164\145\x67\x6f\x72\x79" => $request->category)); } if ($request->initial > 0) { if ($request->initialType == "\x30") { createTransaction($account->id, now(), $request->initial, 0, "\x49\x6e\x69\164\x69\141\x6c\x20\x41\x6d\x6f\165\156\164", $ref); } else { createTransaction($account->id, now(), 0, $request->initial, "\x49\x6e\151\164\151\x61\x6c\x20\x41\x6d\157\x75\x6e\x74", $ref); } } DB::commit(); return back()->with("\x73\x75\x63\143\145\x73\x73", "\101\143\143\x6f\x75\x6e\x74\40\103\162\145\141\164\145\x64\40\x53\x75\x63\x63\145\163\163\146\165\x6c\154\171"); } catch (\Exception $e) { return back()->with("\145\x72\162\x6f\162", $e->getMessage()); } } public function show($id, $from, $to) { $account = accounts::find($id); $transactions = transactions::where("\x61\x63\x63\157\165\x6e\164\x49\104", $id)->whereBetween("\144\x61\x74\x65", array($from, $to))->get(); $pre_cr = transactions::where("\141\x63\143\x6f\x75\156\164\x49\x44", $id)->whereDate("\144\141\164\145", "\74", $from)->sum("\x63\x72"); $pre_db = transactions::where("\141\143\x63\157\165\x6e\164\x49\104", $id)->whereDate("\144\x61\x74\x65", "\x3c", $from)->sum("\144\142"); $pre_balance = $pre_cr - $pre_db; $cur_cr = transactions::where("\141\x63\143\157\165\x6e\164\111\x44", $id)->sum("\143\x72"); $cur_db = transactions::where("\141\143\x63\x6f\165\156\164\111\x44", $id)->sum("\x64\142"); $cur_balance = $cur_cr - $cur_db; return view("\106\x69\156\141\x6e\143\145\56\141\143\x63\157\x75\156\x74\x73\56\x73\x74\x61\x74\x6d\x65\156\164", compact("\141\x63\143\157\165\156\x74", "\164\162\141\x6e\x73\141\x63\164\x69\157\x6e\x73", "\160\x72\145\x5f\142\x61\x6c\141\x6e\143\145", "\x63\165\x72\x5f\x62\x61\154\141\156\143\145", "\x66\162\x6f\x6d", "\x74\x6f")); } public function edit(accounts $account) { return view("\x46\151\156\x61\156\143\x65\56\141\143\x63\x6f\165\x6e\164\x73\x2e\145\144\151\164", compact("\x61\x63\x63\157\165\156\x74")); } public function update(Request $request, accounts $account) { $request->validate(array("\x74\x69\164\154\x65" => "\x72\x65\x71\x75\x69\162\145\144\174\x75\x6e\x69\x71\165\x65\72\x61\x63\x63\157\x75\156\164\163\54\164\151\x74\154\x65\54" . $request->accountID), array("\x74\151\164\x6c\145\x2e\162\145\x71\x75\151\x72\145\x64" => "\120\154\145\141\x73\x65\x20\105\x6e\164\145\162\x20\x41\x63\143\157\x75\x6e\164\x20\x54\x69\164\x6c\145", "\x74\x69\x74\x6c\145\56\165\x6e\151\x71\x75\145" => "\x41\x63\143\x6f\x75\x6e\164\x20\x77\151\164\150\x20\164\150\x69\x73\40\x74\x69\x74\154\145\x20\141\x6c\x72\145\141\144\171\40\x65\x78\151\x73\x74\x73")); $account = accounts::find($request->accountID)->update(array("\164\x69\164\x6c\145" => $request->title, "\x63\141\164\145\147\157\x72\x79" => $request->category, "\x63\156\151\143" => $request->cnic ?? null, "\143\x6f\x6e\164\x61\143\164" => $request->contact ?? null, "\141\x64\144\x72\145\163\163" => $request->address ?? null, "\x6e\x74\156" => $request->ntn ?? null, "\163\164\162\x6e" => $request->strn ?? null, "\143\137\x74\171\x70\145" => $request->c_type)); return redirect()->route("\x61\143\x63\157\x75\x6e\x74\x73\114\151\163\164", $request->type)->with("\x73\x75\x63\x63\145\163\163", "\101\143\x63\157\x75\x6e\164\x20\125\160\x64\x61\x74\x65\x64"); } public function destroy(accounts $accounts) { } }